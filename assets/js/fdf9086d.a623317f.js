"use strict";(self.webpackChunkneetoons_blog=self.webpackChunkneetoons_blog||[]).push([[5876],{5920:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>t,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"El lenguaje Pawn/Variables","title":"Variables","description":"Que es una variable?","source":"@site/docs/El lenguaje Pawn/2 - Variables.md","sourceDirName":"El lenguaje Pawn","slug":"/El lenguaje Pawn/Variables","permalink":"/neetoons-blog/docs/El lenguaje Pawn/Variables","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/El lenguaje Pawn/2 - Variables.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Index","permalink":"/neetoons-blog/docs/El lenguaje Pawn/Index"},"next":{"title":"Arrays","permalink":"/neetoons-blog/docs/El lenguaje Pawn/Arrays"}}');var s=n(4848),l=n(8453);const o={},i=void 0,t={},u=[{value:"Que es una variable?",id:"que-es-una-variable",level:3},{value:"Para que sirve una variable?",id:"para-que-sirve-una-variable",level:3},{value:"\xbfC\xf3mo defino una variable?",id:"c\xf3mo-defino-una-variable",level:3}];function c(e){const a={br:"br",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h3,{id:"que-es-una-variable",children:"Que es una variable?"}),"\n",(0,s.jsx)(a.p,{children:"Una variable es un pedacito de memoria que se reserva para el programa durante la ejecuci\xf3n del mismo, para almacenar informaci\xf3n, que luego usaremos para almacenar alg\xfan dato."}),"\n",(0,s.jsx)(a.h3,{id:"para-que-sirve-una-variable",children:"Para que sirve una variable?"}),"\n",(0,s.jsx)(a.p,{children:"Una variable sirve para guardar datos y realizar alguna tarea con los mismos. Lo importante de estos datos, es que desconocemos cuales son en si, y pueden ser diferentes siempre. Sin embargo, lo que si conocemos el tipo de datos que son (hablaremos sobre los tipos en unos minutos)."}),"\n",(0,s.jsx)(a.h3,{id:"c\xf3mo-defino-una-variable",children:"\xbfC\xf3mo defino una variable?"}),"\n",(0,s.jsx)(a.p,{children:'Para definir una variable en pawn, la forma m\xe1s simple es utilizar "new" y se utiliza de la siguiente forma.'}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-cpp",children:"new MiVariable;\n"})}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"\xbfC\xf3mo utilizo una variable?"}),(0,s.jsx)(a.br,{}),"\n","La variable representa el dato que se almaceno en ella, es decir el dato o la variable es casi lo mismo, entonces la forma de utilizarla seria algo asi:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-cpp",children:'new MiVariable;\n//Asignamos el valor 15 a la variable\nMiVariable = 15;\n//Obtenemos el numero almacenado en la variable y lo mostramos en la consola con el texto escrito.\nprintf("El valor de MiVariable es %i.", MiVariable);\n'})}),"\n",(0,s.jsx)(a.p,{children:"La salida de este codigo es:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"El valor de MiVariable es 15.\n"})})]})}function d(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>i});var r=n(6540);const s={},l=r.createContext(s);function o(e){const a=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);