"use strict";(self.webpackChunkneetoons_blog=self.webpackChunkneetoons_blog||[]).push([[4193],{3209:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"El lenguaje Pawn/Array Multi-dimensionales","title":"Array Multi-dimensionales","description":"\xbfQu\xe9 es una dimensi\xf3n?","source":"@site/docs/El lenguaje Pawn/5 - Array Multi-dimensionales.md","sourceDirName":"El lenguaje Pawn","slug":"/El lenguaje Pawn/Array Multi-dimensionales","permalink":"/neetoons-blog/docs/El lenguaje Pawn/Array Multi-dimensionales","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/El lenguaje Pawn/5 - Array Multi-dimensionales.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Strings","permalink":"/neetoons-blog/docs/El lenguaje Pawn/Strings"},"next":{"title":"Funciones","permalink":"/neetoons-blog/docs/El lenguaje Pawn/Funciones"}}');var s=a(4848),i=a(8453);const o={},l=void 0,d={},t=[];function c(e){const n={br:"br",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\xbfQu\xe9 es una dimensi\xf3n?"}),(0,s.jsx)(n.br,{}),"\n","La dimensi\xf3n es un numero el cual indica cuantos indices son necesarios para almacenar/leer un elemento de un array."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\xbfQu\xe9 es un array multi-dimensional?"}),(0,s.jsx)(n.br,{}),"\n","Es un array que contiene a otros arrays. Podr\xeda graficarse como una matriz en el caso de tener 2 dimensiones, o como un cubo si tuviese 3."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\xbfCu\xe1ntas dimensiones existen?"}),(0,s.jsx)(n.br,{}),"\n","La versi\xf3n de Pawn utilizada por SA-MP soporta hasta 3 dimensiones."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\xbfC\xf3mo crear un array multi-dimensional?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Uni-dimensional (1 dimensi\xf3n):",(0,s.jsx)(n.br,{}),"\n","(Son los que ya vimos antes, pero ahora podemos decir que son uni-dimensionales)"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"new array[5];//Array uni-dimensional de 5 slots\n"})}),"\n",(0,s.jsx)(n.p,{children:"Bi-dimensional (2 dimensiones):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'new array[5][5];//Array bi-dimensional de 5x5 slots, es decir por cada slot "primario" podemos almacenar 5 datos, es decir podemos almacenar 25 elementos\n'})}),"\n",(0,s.jsx)(n.p,{children:"Tri-dimensional (3 dimensiones):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'new array[5][5][5];//Array tri-dimensional de 5x55 slots, es decir por cada slot "primario" tenemos 5 slots secundarios, que a su vez tienen otros 5 slots para almacenar datos.\n'})}),"\n",(0,s.jsx)(n.p,{children:"\xbfC\xf3mo utilizo un array multi-dimensional? Se utilizan igual que los uni-dimensionales."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"new array[3];\n//Asignaci\xf3n:\narray[0] = 1;//Asignamos el valor '1' en el index 0 de nuestro array\narray[1] = 50;//Asignamos el valor '50' en el index 1 de nuestro array\n//Lectura:\n//Accedemos al valor almacenado en el index 0\nprintf(\"El valor almacenado en el index 0 de array es %i\", array[0]);\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gr\xe1ficamente:\nCode:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"1 50 0 0 0\n"})}),"\n",(0,s.jsx)(n.p,{children:"Bi-dimensional:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"new array[5][5];\n//Asignaci\xf3n:\narray[0][1] = 1;//Asignamos el valor '1' en el index 1 respecto del index 0 de nuestro array\narray[0][3] = 5;//Asignamos el valor '5' en el index 3 respecto del index 0 de nuestro array\narray[4][1] = 9;//Asignamos el valor '9' en el index 1 respecto del index 4 de nuestro array\narray[3][2] = 6;//Asignamos el valor '6' en el index 2 respecto del index 3 de nuestro array\narray[3][4] = 8;//Asignamos el valor '8' en el index 4 respecto del index 3 de nuestro array\n//Lectura:\nprintf(\"El valor almacenado en el index 1 respecto del index 0 es %i\", array[0][1]);\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gr\xe1ficamente:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"0 1 0 5 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 6 0 8\n0 9 0 0 0\n"})}),"\n",(0,s.jsx)(n.p,{children:"Tri-dimensional:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"new array[5][5][5];\n//Asignaci\xf3n:\narray[0][1][0] = 10;//Asignamos el valor '10' en el index 0 respecto del index 1 respecto del index 0 de nuestro array\n//Lectura:\nprintf(\"El valor almacenado en el index 0 respecto del index 1 respecto del index 0 es %i\", array[0][1]);\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gr\xe1ficamente:\nEs un cubo, por lo cual no se puede graficar aqui, pero pueden ver esta imagen."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>l});var r=a(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);